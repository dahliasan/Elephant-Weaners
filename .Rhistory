# add particle trace
geom_histogram(data = data.frame(circ.p), aes(x = circ.p),
breaks = seq(0, 360, 45),
fill = NA,
color = "black",
alpha = 1,
size = 1) +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
# weaner mean direction
geom_vline(xintercept = mean(circ.w), color = "black", linetype = 1, size = 1) +
annotate("label", x = mean(circ.w), y = 20, label = mean(circ.w) %>% round(1)) +
# particle mean direction
geom_vline(xintercept = mean(circ.p), color = "pink", linetype = 2, size = 1) +
annotate("label", x = mean(circ.p), y = 20, label = mean(circ.p) %>% round(1)) +
labs(subtitle = paste('weaners (n=', length(circ.w), ')',sep = ''),
y = "count")  +
theme_bw() +
theme(text = element_text(family = "Inter", size = 20))
p1 <- ggplot() +
geom_histogram(data = data.frame(circ.f), aes(x = circ.f),
breaks = seq(0, 360, 45),
colour = "black",
fill = "grey") +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
geom_vline(xintercept = mean(circ.f), color = "black", linetype = 2, size = 1) +
annotate("label", x = mean(circ.f), y = 20, label = mean(circ.f) %>% round(1)) +
labs(subtitle = paste('adult females (n=', length(circ.f), ')', sep = ''), y = "") +
theme_bw() +
theme(text = element_text(family = "Inter", size = 20))
# weaner
p2 <- ggplot() +
# add weaner
geom_histogram(data = data.frame(circ.w), aes(x = circ.w),
breaks = seq(0, 360, 45),
colour = NA,
fill = "firebrick3",
alpha = 1) +
# add particle trace
geom_histogram(data = data.frame(circ.p), aes(x = circ.p),
breaks = seq(0, 360, 45),
fill = NA,
color = "black",
alpha = 1,
size = 1) +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
# weaner mean direction
geom_vline(xintercept = mean(circ.w), color = "black", linetype = 1, size = 1) +
annotate("label", x = mean(circ.w), y = 20, label = mean(circ.w) %>% round(1)) +
# particle mean direction
geom_vline(xintercept = mean(circ.p), color = "pink", linetype = 2, size = 1) +
annotate("label", x = mean(circ.p), y = 20, label = mean(circ.p) %>% round(1)) +
labs(subtitle = paste('weaners (n=', length(circ.w), ')',sep = ''),
y = "count")  +
theme_bw() +
theme(text = element_text(family = "Inter", size = 20))
png('/output/poster/dispersal_direction_v2.png', width=20, height=15, units='cm', res=300)
ggarrange(p2, p1, ncol = 2, labels = c('a', 'b'))
dev.off()
png('./output/poster/dispersal_direction_v2.png', width=20, height=15, units='cm', res=300)
ggarrange(p2, p1, ncol = 2, labels = c('a', 'b'))
dev.off()
png('./output/poster/dispersal_direction_v2.png', width=width, height=height, units='in', res=300)
ggarrange(p2, p1, ncol = 2, labels = c('a', 'b'))
dev.off()
p1 <- ggplot() +
geom_histogram(data = data.frame(circ.f), aes(x = circ.f),
breaks = seq(0, 360, 45),
colour = "black",
fill = "grey") +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
geom_vline(xintercept = mean(circ.f), color = "black", linetype = 2, size = 1) +
annotate("label", x = mean(circ.f), y = 20, label = mean(circ.f) %>% round(1)) +
labs(subtitle = paste('adult females (n=', length(circ.f), ')', sep = ''), y = "") +
theme_bw() +
theme(text = element_text(family = "Inter", size = 18))
# weaner
p2 <- ggplot() +
# add weaner
geom_histogram(data = data.frame(circ.w), aes(x = circ.w),
breaks = seq(0, 360, 45),
colour = NA,
fill = "firebrick3",
alpha = 1) +
# add particle trace
geom_histogram(data = data.frame(circ.p), aes(x = circ.p),
breaks = seq(0, 360, 45),
fill = NA,
color = "black",
alpha = 1,
size = 1) +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
# weaner mean direction
geom_vline(xintercept = mean(circ.w), color = "black", linetype = 1, size = 1) +
annotate("label", x = mean(circ.w), y = 20, label = mean(circ.w) %>% round(1)) +
# particle mean direction
geom_vline(xintercept = mean(circ.p), color = "pink", linetype = 2, size = 1) +
annotate("label", x = mean(circ.p), y = 20, label = mean(circ.p) %>% round(1)) +
labs(subtitle = paste('weaners (n=', length(circ.w), ')',sep = ''),
y = "count")  +
theme_bw() +
theme(text = element_text(family = "Inter", size = 18))
png('./output/poster/dispersal_direction_v2.png', width=width, height=height, units='in', res=300)
ggarrange(p2, p1, ncol = 2, labels = c('a', 'b'))
dev.off()
png('./output/poster/dispersal_direction_v2.png', width=10, height=6, units='in', res=300)
ggarrange(p2, p1, ncol = 2, labels = c('a', 'b'))
dev.off()
png('./output/poster/dispersal_direction_v2.png', width=12, height=6, units='in', res=300)
ggarrange(p2, p1, ncol = 2, labels = c('a', 'b'))
dev.off()
b <- b %>% mutate(survive = surviveYear1)
b <- out %>%
ungroup() %>%
left_join(ds)
out <- tibble(loc_early) %>%
dplyr::select(id, bearing) %>%
rename(bearing.w = bearing) %>%
left_join(tibble(pt_early) %>% dplyr::select(id, bearing)) %>%
rename(bearing.pt = bearing) %>%
group_by(id) %>%
mutate(bearing_diff = angle_diff(bearing.w, bearing.pt),
ew_zone = eastOrWest(bearing.w),
compass_zone = whichZone(bearing.w))
b <- out %>%
ungroup() %>%
left_join(ds)
ds <- d %>%
group_by(id) %>%
filter(trip == 1, sim == 0) %>%
summarise(birthyear = first(birthyear),
surviveTrip1 = ifelse(first(is_trip_complete) == T | first(seen_6m) == T, T, F),
surviveYear1 = ifelse(first(seen_1y) == TRUE, T, F),
weanmass = first(weanmass))
d <- readRDS('./Output/all_data_combined.rds')
ds <- d %>%
group_by(id) %>%
filter(trip == 1, sim == 0) %>%
summarise(birthyear = first(birthyear),
surviveTrip1 = ifelse(first(is_trip_complete) == T | first(seen_6m) == T, T, F),
surviveYear1 = ifelse(first(seen_1y) == TRUE, T, F),
weanmass = first(weanmass))
b <- out %>%
ungroup() %>%
left_join(ds)
# Add size category variable
b$sizeCat <- 'avg'
b$sizeCat[b$weanmass > 135] <- 'heavy'
b$sizeCat[b$weanmass < 96] <- 'light'
table(b$surviveTrip1)
table(b$surviveYear1)
# set which response variable to use
b <- b %>% mutate(survive = surviveTrip1)
circ.live <- circular(b %>% filter(survive == TRUE) %>% pull(bearing.w)%%360, units = 'degrees', zero = pi/2, rotation = 'clock')
circ.dead <- circular(b %>% filter(survive == FALSE) %>% pull(bearing.w)%%360, units = 'degrees', zero = pi/2, rotation = 'clock')
b <- b %>% mutate(survive = surviveYear1)
circ.live <- circular(b %>% filter(survive == TRUE) %>% pull(bearing.w)%%360, units = 'degrees', zero = pi/2, rotation = 'clock')
circ.dead <- circular(b %>% filter(survive == FALSE) %>% pull(bearing.w)%%360, units = 'degrees', zero = pi/2, rotation = 'clock')
p3 <- ggplot() +
geom_histogram(data = data.frame(circ.live), aes(x = circ.live),
breaks = seq(0, 360, 45),
colour = "black",
fill = "grey") +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
# add mean direction annotation
geom_vline(xintercept = mean(circ.live), color = "black", linetype = 2, size = 1) +
annotate("label", x = mean(circ.live), y = 20, label = mean(circ.live) %>% round(1)) +
# labs
labs(subtitle = paste0('1st year survived, n = ', circ.live %>% length), y = "count") +
theme_bw()
p4 <- ggplot() +
geom_histogram(data = data.frame(circ.dead), aes(x = circ.dead),
breaks = seq(0, 360, 45),
colour = "black",
fill = "grey") +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
# add mean direction annotation
geom_vline(xintercept = mean(circ.dead), color = "black", linetype = 2, size = 1) +
annotate("label", x = mean(circ.dead), y = 4, label = mean(circ.dead) %>% round(1)) +
# labs
labs(subtitle = paste0('1st year died, n = ', circ.dead %>% length), y = "") +
theme_bw()
ggarrange(p3, p4, ncol = 2, labels = c('a', 'b'), align = 'hv')
out <- tibble(loc_early) %>%
dplyr::select(id, bearing) %>%
rename(bearing.w = bearing) %>%
left_join(tibble(pt_early) %>% dplyr::select(id, bearing)) %>%
rename(bearing.pt = bearing) %>%
group_by(id) %>%
mutate(bearing_diff = angle_diff(bearing.w, bearing.pt),
ew_zone = eastOrWest(bearing.w),
compass_zone = whichZone(bearing.w))
d <- readRDS('./Output/all_data_combined.rds')
ds <- d %>%
group_by(id) %>%
filter(trip == 1, sim == 0) %>%
summarise(birthyear = first(birthyear),
surviveTrip1 = ifelse(first(is_trip_complete) == T | first(seen_6m) == T, T, F),
surviveYear1 = ifelse(first(seen_1y) == TRUE, T, F),
weanmass = first(weanmass))
b <- out %>%
ungroup() %>%
left_join(ds)
# Add size category variable
b$sizeCat <- 'avg'
b$sizeCat[b$weanmass > 135] <- 'heavy'
b$sizeCat[b$weanmass < 96] <- 'light'
table(b$surviveTrip1)
table(b$surviveYear1)
# set which response variable to use
b <- b %>% mutate(survive = surviveTrip1)
circ.live <- circular(b %>% filter(survive == TRUE) %>% pull(bearing.w)%%360, units = 'degrees', zero = pi/2, rotation = 'clock')
circ.dead <- circular(b %>% filter(survive == FALSE) %>% pull(bearing.w)%%360, units = 'degrees', zero = pi/2, rotation = 'clock')
p1 <- ggplot() +
geom_histogram(data = data.frame(circ.live), aes(x = circ.live),
breaks = seq(0, 360, 45),
colour = "black",
fill = "grey") +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
# add mean direction annotation
geom_vline(xintercept = mean(circ.live), color = "black", linetype = 2, size = 1) +
annotate("label", x = mean(circ.live), y = 20, label = mean(circ.live) %>% round(1)) +
# labs
labs(subtitle = paste0('1st trip survived, n = ', circ.live %>% length), y = "count") +
theme_bw()
p2 <- ggplot() +
geom_histogram(data = data.frame(circ.dead), aes(x = circ.dead),
breaks = seq(0, 360, 45),
colour = "black",
fill = "grey") +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
# add mean direction annotation
geom_vline(xintercept = mean(circ.dead), color = "black", linetype = 2, size = 1) +
annotate("label", x = mean(circ.dead), y = 4, label = mean(circ.dead) %>% round(1)) +
# labs
labs(subtitle = paste0('1st trip died, n = ', circ.dead %>% length), y = "") +
theme_bw()
# png('./output/dispersal_direction_by_trip1survival.png', width=20, height=10, units='cm', res=500)
ggarrange(p1, p2, ncol = 2, labels = c('a', 'b'), align = 'hv')
poster_theme <-   theme(text = element_text(family = "Inter", size = 18))
p3 <- ggplot() +
geom_histogram(data = data.frame(circ.live), aes(x = circ.live),
breaks = seq(0, 360, 45),
colour = "black",
fill = "grey") +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
# add mean direction annotation
geom_vline(xintercept = mean(circ.live), color = "black", linetype = 2, size = 1) +
annotate("label", x = mean(circ.live), y = 20, label = mean(circ.live) %>% round(1)) +
# labs
labs(subtitle = paste0('1st year survived, n = ', circ.live %>% length), y = "count") +
theme_bw() + poster_theme
p4 <- ggplot() +
geom_histogram(data = data.frame(circ.dead), aes(x = circ.dead),
breaks = seq(0, 360, 45),
colour = "black",
fill = "grey") +
coord_polar() +
scale_x_continuous("", limits = c(0, 360), breaks = seq(0, 360, 45)) +
# add mean direction annotation
geom_vline(xintercept = mean(circ.dead), color = "black", linetype = 2, size = 1) +
annotate("label", x = mean(circ.dead), y = 4, label = mean(circ.dead) %>% round(1)) +
# labs
labs(subtitle = paste0('1st year died, n = ', circ.dead %>% length), y = "") +
theme_bw() + poster_theme
png('./output/poster/dispersal_direction_by_year1survival.png', width=20, height=10, units='cm', res=500)
ggarrange(p3, p4, ncol = 2, labels = c('a', 'b'), align = 'hv')
dev.off()
png('./output/poster/dispersal_direction_by_year1survival.png', width=12, height=6, units='in', res=res)
ggarrange(p3, p4, ncol = 2, labels = c('a', 'b'), align = 'hv')
dev.off()
rm(list = ls())
options(tibble.width = Inf)
library(tidyverse)
library(sf)
library(lubridate)
library(foieGras)
rm(list = ls())
options(tibble.width = Inf)
library(tidyverse)
library(sf)
library(lubridate)
# library(foieGras)
library(viridis)
library(tmap)
library(ggpubr)
library(see)
library(orsifronts)
library(pals)
library(lme4)
library(DHARMa)
library(MuMIn)
library(mgcv)
library(effects)
library(ggeffects)
library(rstatix)
# library(sjPlot)
load('11_survival_model_workspace.RData')
pred
# png('./output/survival model/1st trip survival -- avg model effects.png', width=15, height=15, units='cm', res=500)
ggplot(data = pred, aes(x = is_ESE, group = is_ESE)) +
geom_point(aes(y = fit)) +
geom_errorbar(aes(ymin = fit-se.fit, ymax = fit+se.fit), width = .1) +
labs(y = "1st trip survival", x = "travelled with the flow") +
theme_pubr(border = T)
a <- tibble(is_ESE = TRUE, weanmass = dat$weanmass)
b <- tibble(is_ESE = FALSE, weanmass = dat$weanmass)
pred <- predict(avgmod.2delta, newdata = a, se.fit = TRUE) %>% as_tibble() %>%
bind_cols(tibble(is_ESE = TRUE, weanmass = dat$weanmass))
pred <- pred %>% bind_rows(
predict(avgmod.2delta, newdata = b, se.fit = TRUE) %>% as_tibble() %>% bind_cols(tibble(is_ESE = FALSE, weanmass = dat$weanmass))
)
# png('./output/survival model/1st trip survival -- avg model effects.png', width=15, height=15, units='cm', res=500)
ggplot(data = pred, aes(x = is_ESE, group = is_ESE)) +
geom_point(aes(y = fit)) +
geom_errorbar(aes(ymin = fit-se.fit, ymax = fit+se.fit), width = .1) +
labs(y = "1st trip survival", x = "travelled with the flow") +
theme_pubr(border = T)
# dev.off()
# Model -------------------------------------------------------------------
# + 1st trip survival -----------------------------------------------------
## prepare model data
dat <-dr %>%
filter(trip == 1, land == FALSE) %>%
group_by(id) %>%
arrange(id, trip) %>%
summarise(
year = first(birthyear),
surviveTrip1 = ifelse(first(seen_6m) == TRUE | first(is_trip_complete) == TRUE, 1, 0),
surviveYear1 = ifelse(first(seen_1y) == TRUE, 1, 0),
# across(c(topo:ice, chl, chlgrad, dist_to_ice_m), mean, na.rm = T),
across(c(blackmass, weanmass, bearing_diff, ew_zone, compass_zone, compass_zone.pt), first),
# g_sd = sd(g),
# g_mean = mean(g),
# g_propARS = sum(g<=0.5)/n(),
is_ESE = ifelse(compass_zone == "E-SE", TRUE, FALSE))
dat <- dat %>% filter(!is.na(weanmass), !is.na(is_ESE))
# seals that survived 1st trip
table(dat$surviveTrip1 == TRUE)
table(dat$year)
options(na.action = 'na.omit')
m.global <- glm(surviveTrip1 ~ weanmass*is_ESE + year, data = dat, family = binomial)
options(na.action = 'na.fail')
summary(m.global)
dd <- dredge(m.global)
dd
avgmod.2delta <- model.avg(dd, subset = delta < 2, fit = TRUE)
summary(avgmod.2delta)
importance(avgmod.2delta)
m.final <- glm(surviveTrip1 ~  is_ESE, data = dat, family = binomial)
summary(m.final)
effects::allEffects(m.final) %>% plot()
simulationOutput <- simulateResiduals(fittedModel = m.global, n = 1000)
plot(simulationOutput)
# ~ plot avg model --------------------------------------------------------
a <- tibble(is_ESE = TRUE, weanmass = dat$weanmass)
b <- tibble(is_ESE = FALSE, weanmass = dat$weanmass)
pred <- predict(avgmod.2delta, newdata = a, se.fit = TRUE) %>% as_tibble() %>%
bind_cols(tibble(is_ESE = TRUE, weanmass = dat$weanmass))
pred <- pred %>% bind_rows(
predict(avgmod.2delta, newdata = b, se.fit = TRUE) %>% as_tibble() %>% bind_cols(tibble(is_ESE = FALSE, weanmass = dat$weanmass))
)
# png('./output/survival model/1st trip survival -- avg model effects.png', width=15, height=15, units='cm', res=500)
ggplot(data = pred, aes(x = is_ESE, group = is_ESE)) +
geom_point(aes(y = fit)) +
geom_errorbar(aes(ymin = fit-se.fit, ymax = fit+se.fit), width = .1) +
labs(y = "1st trip survival", x = "travelled with the flow") +
theme_pubr(border = T)
# Set the plot dimensions in inches
width <- 9 # 3 inches x 3
height <- 6 # 2 inches x 3
# Set the resolution in dots per inch
res <- 300
poster_theme <-   theme(text = element_text(family = "Inter", size = 18))
png('./output/poster/survival model/1st trip survival -- avg model effects.png', width=6, height=6, units='in', res=res)
ggplot(data = pred, aes(x = is_ESE, group = is_ESE)) +
geom_point(aes(y = fit)) +
geom_errorbar(aes(ymin = fit-se.fit, ymax = fit+se.fit), width = .1) +
labs(y = "1st trip survival", x = "travelled with the flow") +
theme_pubr(border = T) + poster_theme
dev.off()
png('./output/poster/1st trip survival -- avg model effects.png', width=6, height=6, units='in', res=res)
ggplot(data = pred, aes(x = is_ESE, group = is_ESE)) +
geom_point(aes(y = fit)) +
geom_errorbar(aes(ymin = fit-se.fit, ymax = fit+se.fit), width = .1) +
labs(y = "1st trip survival", x = "travelled with the flow") +
theme_pubr(border = T) + poster_theme
dev.off()
png('./output/poster/1st trip survival -- avg model effects.png', width=6, height=6, units='in', res=res)
ggplot(data = pred, aes(x = is_ESE, group = is_ESE)) +
geom_point(aes(y = fit)) +
geom_errorbar(aes(ymin = fit-se.fit, ymax = fit+se.fit), width = .1) +
labs(y = "1st trip survival", x = "Travelled with the flow") +
theme_pubr(border = T) + poster_theme
dev.off()
a <- tibble(is_ESE = TRUE, weanmass = dat$weanmass)
b <- tibble(is_ESE = FALSE, weanmass = dat$weanmass)
pred <- predict(avgmod.2delta, newdata = a, se.fit = TRUE) %>% as_tibble() %>%
bind_cols(tibble(is_ESE = TRUE, weanmass = dat$weanmass))
pred <- pred %>% bind_rows(
predict(avgmod.2delta, newdata = b, se.fit = TRUE) %>% as_tibble() %>% bind_cols(tibble(is_ESE = FALSE, weanmass = dat$weanmass))
)
# config facet labels
withFlow_labs <- c("is_ESE = FALSE", "is_ESE = TRUE")
names(withFlow_labs) <- c("FALSE", "TRUE")
# png('./output/survival model/1st year survival -- avg model effects.png', width=20, height=13, units='cm', res=500)
ggplot(data = pred, aes(x = weanmass)) +
geom_line(aes(y = fit)) +
# geom_point(aes(y = fit)) +
geom_ribbon(aes(ymin = fit-se.fit, ymax = fit+se.fit), alpha = 0.1) +
facet_wrap(~is_ESE, labeller = labeller(is_ESE = withFlow_labs)) +
labs(y = "1st year survival", x = "weanmass (kg)") +
theme_pubr(border = T) +
theme(panel.spacing = unit(2, "lines"))
# + 1st year survival -----------------------------------------------------
# seals that survived 1st year
table(dat$surviveYear1 == TRUE)
options(na.action = 'na.omit')
m.global <- glm(surviveYear1 ~ weanmass*is_ESE + year, data = dat, family = binomial)
options(na.action = 'na.fail')
dd <- dredge(m.global)
dd
avgmod.2delta <- model.avg(dd, subset = delta < 2, fit = TRUE)
summary(avgmod.2delta)
importance(avgmod.2delta)
# Test assumptions
m.final <- glm(surviveYear1 ~  weanmass*is_ESE, data = dat, family = binomial)
summary(m.final)
effects::allEffects(m.final) %>% plot()
simulationOutput <- simulateResiduals(fittedModel = m.global, n = 1000)
plot(simulationOutput)
# ~ plot avg model --------------------------------------------------------
a <- tibble(is_ESE = TRUE, weanmass = dat$weanmass)
b <- tibble(is_ESE = FALSE, weanmass = dat$weanmass)
pred <- predict(avgmod.2delta, newdata = a, se.fit = TRUE) %>% as_tibble() %>%
bind_cols(tibble(is_ESE = TRUE, weanmass = dat$weanmass))
pred <- pred %>% bind_rows(
predict(avgmod.2delta, newdata = b, se.fit = TRUE) %>% as_tibble() %>% bind_cols(tibble(is_ESE = FALSE, weanmass = dat$weanmass))
)
# config facet labels
withFlow_labs <- c("is_ESE = FALSE", "is_ESE = TRUE")
names(withFlow_labs) <- c("FALSE", "TRUE")
# png('./output/survival model/1st year survival -- avg model effects.png', width=20, height=13, units='cm', res=500)
ggplot(data = pred, aes(x = weanmass)) +
geom_line(aes(y = fit)) +
# geom_point(aes(y = fit)) +
geom_ribbon(aes(ymin = fit-se.fit, ymax = fit+se.fit), alpha = 0.1) +
facet_wrap(~is_ESE, labeller = labeller(is_ESE = withFlow_labs)) +
labs(y = "1st year survival", x = "weanmass (kg)") +
theme_pubr(border = T) +
theme(panel.spacing = unit(2, "lines"))
png('./output/poster/1st year survival -- avg model effects.png', width=6, height=6, units='in', res=res)
ggplot(data = pred, aes(x = weanmass)) +
geom_line(aes(y = fit)) +
# geom_point(aes(y = fit)) +
geom_ribbon(aes(ymin = fit-se.fit, ymax = fit+se.fit), alpha = 0.1) +
facet_wrap(~is_ESE, labeller = labeller(is_ESE = withFlow_labs)) +
labs(y = "1st year survival", x = "weanmass (kg)") +
theme_pubr(border = T) +
theme(panel.spacing = unit(2, "lines")) + poster_theme
dev.off()
png('./output/poster/1st year survival -- avg model effects.png', width=8, height=6, units='in', res=res)
ggplot(data = pred, aes(x = weanmass)) +
geom_line(aes(y = fit)) +
# geom_point(aes(y = fit)) +
geom_ribbon(aes(ymin = fit-se.fit, ymax = fit+se.fit), alpha = 0.1) +
facet_wrap(~is_ESE, labeller = labeller(is_ESE = withFlow_labs)) +
labs(y = "1st year survival", x = "weanmass (kg)") +
theme_pubr(border = T) +
theme(panel.spacing = unit(2, "lines")) + poster_theme
dev.off()
png('./output/poster/1st year survival -- avg model effects.png', width=9, height=6, units='in', res=res)
ggplot(data = pred, aes(x = weanmass)) +
geom_line(aes(y = fit)) +
# geom_point(aes(y = fit)) +
geom_ribbon(aes(ymin = fit-se.fit, ymax = fit+se.fit), alpha = 0.1) +
facet_wrap(~is_ESE, labeller = labeller(is_ESE = withFlow_labs)) +
labs(y = "1st year survival", x = "weanmass (kg)") +
theme_pubr(border = T) +
theme(panel.spacing = unit(2, "lines")) + poster_theme
dev.off()
png('./output/poster/1st year survival -- avg model effects.png', width=12, height=6, units='in', res=res)
ggplot(data = pred, aes(x = weanmass)) +
geom_line(aes(y = fit)) +
# geom_point(aes(y = fit)) +
geom_ribbon(aes(ymin = fit-se.fit, ymax = fit+se.fit), alpha = 0.1) +
facet_wrap(~is_ESE, labeller = labeller(is_ESE = withFlow_labs)) +
labs(y = "1st year survival", x = "Weanmass (kg)") +
theme_pubr(border = T) +
theme(panel.spacing = unit(2, "lines")) + poster_theme
dev.off()
withFlow_labs <- c("swam against current", "swam with current")
names(withFlow_labs) <- c("FALSE", "TRUE")
png('./output/poster/1st year survival -- avg model effects.png', width=12, height=6, units='in', res=res)
ggplot(data = pred, aes(x = weanmass)) +
geom_line(aes(y = fit)) +
# geom_point(aes(y = fit)) +
geom_ribbon(aes(ymin = fit-se.fit, ymax = fit+se.fit), alpha = 0.1) +
facet_wrap(~is_ESE, labeller = labeller(is_ESE = withFlow_labs)) +
labs(y = "1st year survival", x = "Weanmass (kg)") +
theme_pubr(border = T) +
theme(panel.spacing = unit(2, "lines")) + poster_theme
dev.off()
