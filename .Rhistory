weaners
fit <- fit_ssm(weaners, vmax = 3, model= 'crw', time.step = 24), verbose = 0)
fit <- fit_ssm(weaners, vmax = 3, model= 'crw', time.step = 24, verbose = 0)
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
fit <- fit_ssm(weaners, vmax = 3, model= 'crw', time.step = 24, verbose = 0)
fit <- fit_ssm(weaners, vmax = 3, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(weaners, vmax = 3, model= 'crw', time.step = NA, verbose = 0, map = list(psi = factor(NA)))
weaners
weaners$id %>% unique
mdb <-  mdb.get('./Data/AccessDB/mq1.mdb')
mdb
mdb %>% summary
df <- mdb$diag %>% as_tibble()
d
df
df %>% View()
## Parse Date Time (I <3 lubridate)
df <- df %>%
mutate(D.DATE = D.DATE %>% as.character() %>% mdy_hms())
df
df <- mdb$diag %>% as_tibble()
df
df %>% View()
## Parse Date Time (I <3 lubridate)
df <- df %>%
mutate(D.DATE = D.DATE %>% as.character() %>% mdy_hms())
df
## Get rid of the "labelled" class attribute for numeric columns
df <- df %>% mutate_if(is.numeric, as.numeric)
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
fit <- fit_ssm(weaners, vmax = 3, model= 'crw', time.step = 24, verbose = 0)
fit
mdb2 <-  mdb.get('./Data/AccessDB/mq2.mdb')
df <- bind_rows(mdb$diag %>% as_tibble(), mdb2$diag %>% as_tibble())
df <- mdb$diag %>% as_tibble()
df
df <- bind_rows(df, as_tibble(mdb2$diag))
df2 <- mdb2$diag %>% as_tibble()
df2
df
df <- mdb$diag[,1:5] %>% as_tibble()
df
df <- mdb$diag[,1:6] %>% as_tibble()
df
df2 <- mdb2$diag[,1:6] %>% as_tibble()
df <- bind_rows(df, df2) %>%
select(-PTT)
df <- mdb$diag[,1:6] %>% as_tibble() %>% select(-PTT)
df2 <- mdb2$diag[,1:6] %>% as_tibble() %>% select(-PTT)
df <- bind_rows(df, df2)
df
## Parse Date Time (I <3 lubridate)
df <- df %>%
mutate(D.DATE = D.DATE %>% as.character() %>% mdy_hms())
## Get rid of the "labelled" class attribute for numeric columns
df <- df %>% mutate_if(is.numeric, as.numeric)
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
weaners
weaners$id %>% unique
weaners %>% summary
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0)
fit
df
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
weaners
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0)
fit
df <- mdb$diag[,1:6] %>% as_tibble() %>% select(-PTT)
df2 <- mdb2$diag[,1:6] %>% as_tibble() %>% select(-PTT)
df <- bind_rows(df, df2)
## Parse Date Time (I <3 lubridate)
df <- df %>%
mutate(D.DATE = D.DATE %>% as.character() %>% mdy_hms())
## Get rid of the "labelled" class attribute for numeric columns
df <- df %>% mutate_if(is.numeric, as.numeric)
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
weaners
weaners$id %>% unique
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0)
fit
fit <- fit_ssm(weaners %>% filter(!id == 'mq1-22488-95'), model= 'crw', time.step = 24, verbose = 0)
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)))
# Fit SSM -----------------------------------------------------------------
weaners <- weaners %>% filter(!id == 'mq1-22488-95') # this seal had < 3 locations
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)))
fit
fit %>% View()
fit <- fit_ssm(weaners, model= 'crw', time.step = NA, verbose = 0, map = list(psi = factor(NA)))
fit
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, ang = -1, time.step = NA, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, scale = TRUE, verbose = 0, map = list(psi = factor(NA)))
fit
fit <- fit_ssm(weaners, model= 'rw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)))
fit
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)), optim = 'nlminb')
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)), optMeth = "Nelder-Mead")
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)), optMeth = "BFGS")
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)), optMeth = "CG")
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)), optMeth = "SANN")
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)), optMeth = "Brent")
fit <- fit_ssm(weaners, model= 'crw', vmax = 20, time.step = NA, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)), fit.to.subset = FALSE)
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)))
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, ALT.LON, ALT.LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
df
df <- mdb$diag %>% as_tibble() %>% select(-PTT)
df2 <- mdb2$diag %>% as_tibble() %>% select(-PTT)
df <- bind_rows(df, df2)
df <- mdb$diag %>% as_tibble() %>% select(-PTT, -ACTUAL.PTT)
df2 <- mdb2$diag %>% as_tibble() %>% select(-PTT, -ACTUAL.PTT)
df <- bind_rows(df, df2)
## Parse Date Time (I <3 lubridate)
df <- df %>%
mutate(D.DATE = D.DATE %>% as.character() %>% mdy_hms())
## Get rid of the "labelled" class attribute for numeric columns
df <- df %>% mutate_if(is.numeric, as.numeric)
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, ALT.LON, ALT.LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
# Fit SSM -----------------------------------------------------------------
weaners <- weaners %>% filter(!id == 'mq1-22488-95') # this seal had < 3 locations
fit <- fit_ssm(weaners, model= 'crw', vmax = 3, time.step = NA, verbose = 0, map = list(psi = factor(NA)))
fit
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, ALT.LON, ALT.LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
fit <- fit_ssm(weaners, model= 'crw', time.step = NA, verbose = 0, map = list(psi = factor(NA)))
# Fit SSM -----------------------------------------------------------------
weaners <- weaners %>% filter(!id == 'mq1-22488-95') # this seal had < 3 locations
fit <- fit_ssm(weaners, model= 'crw', time.step = NA, verbose = 0, map = list(psi = factor(NA)))
weaners %>% View()
df <- df2
## Parse Date Time (I <3 lubridate)
df <- df %>%
mutate(D.DATE = D.DATE %>% as.character() %>% mdy_hms())
## Get rid of the "labelled" class attribute for numeric columns
df <- df %>% mutate_if(is.numeric, as.numeric)
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, ALT.LON, ALT.LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
# Fit SSM -----------------------------------------------------------------
weaners <- weaners %>% filter(!id == 'mq1-22488-95') # this seal had < 3 locations
fit <- fit_ssm(weaners, model= 'crw', time.step = NA, verbose = 0, map = list(psi = factor(NA)))
df <- mdb$diag %>% as_tibble() %>% select(-PTT, -ACTUAL.PTT)
## Parse Date Time (I <3 lubridate)
df <- df %>%
mutate(D.DATE = D.DATE %>% as.character() %>% mdy_hms())
## Get rid of the "labelled" class attribute for numeric columns
df <- df %>% mutate_if(is.numeric, as.numeric)
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, ALT.LON, ALT.LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
# Fit SSM -----------------------------------------------------------------
weaners <- weaners %>% filter(!id == 'mq1-22488-95') # this seal had < 3 locations
fit <- fit_ssm(weaners, model= 'crw', time.step = NA, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)))
df <- mdb$diag %>% as_tibble() %>% select(-PTT, -ACTUAL.PTT)
df2 <- mdb2$diag %>% as_tibble() %>% select(-PTT, -ACTUAL.PTT)
df <- bind_rows(df, df2)
## Parse Date Time (I <3 lubridate)
df <- df %>%
mutate(D.DATE = D.DATE %>% as.character() %>% mdy_hms())
## Get rid of the "labelled" class attribute for numeric columns
df <- df %>% mutate_if(is.numeric, as.numeric)
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
# Fit SSM -----------------------------------------------------------------
weaners <- weaners %>% filter(!id == 'mq1-22488-95') # this seal had < 3 locations
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)))
fit
fit %>% tail
fit$ssm
weaners
df$id < df$id %>% as.character()
df
df$ref < df$ref %>% as.character()
df
df <- mdb$diag %>% as_tibble() %>% select(-PTT, -ACTUAL.PTT)
df2 <- mdb2$diag %>% as_tibble() %>% select(-PTT, -ACTUAL.PTT)
df <- bind_rows(df, df2)
## Parse Date Time (I <3 lubridate)
df <- df %>%
mutate(D.DATE = D.DATE %>% as.character() %>% mdy_hms())
## Get rid of the "labelled" class attribute for numeric columns
df <- df %>% mutate_if(is.numeric, as.numeric)
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
weaners$id <- weaners$id %>% as.character()
weaners
# Fit SSM -----------------------------------------------------------------
weaners <- weaners %>% filter(!id == 'mq1-22488-95') # this seal had < 3 locations
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)))
fit$ssm
fit$ssm[[1]]
fit$ssm[[2]]
fit$ssm[[3]]
fit$ssm[[3]]
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
weaners$id <- weaners$id %>% factor()
# Fit SSM -----------------------------------------------------------------
weaners <- weaners %>% filter(!id == 'mq1-22488-95') # this seal had < 3 locations
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)))
weaners
## Select only relevant columns and rename them
weaners <- df %>%
select(ref, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
weaners$id <- weaners$id %>% as.character()
# Fit SSM -----------------------------------------------------------------
weaners <- weaners %>% filter(!id == 'mq1-22488-95') # this seal had < 3 locations
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)))
fit
fit$ssm[1]
fit <- fit_ssm(weaners, model= 'crw', time.step = 6, verbose = 0, map = list(psi = factor(NA)))
fit %>% str()
fit$converged
fit$ssm
View(fit)
fit <- fit_ssm(weaners, model= 'crw', time.step = 6, scale = TRUE, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(weaners, model= 'crw', time.step = 6, scale = TRUE, verbose = 0)
fit <- fit_ssm(weaners, model= 'crw', time.step = NA, scale = TRUE, verbose = 0)
fit <- fit_ssm(weaners, model= 'crw', time.step = NA, scale = TRUE)
fit <- fit_ssm(weaners, model= 'crw', vmax = 2, time.step = NA, scale = TRUE)
fit <- fit_ssm(weaners, model= 'crw', vmax = 2, time.step = NA, verbose = FALSE)
fit <- fit_ssm(weaners, model= 'crw', vmax = 2, time.step = NA, verbose = 0)
df <- mdb$diag %>% as_tibble() %>% select(-PTT, -ACTUAL.PTT)
df2 <- mdb2$diag %>% as_tibble() %>% select(-PTT, -ACTUAL.PTT)
df <- bind_rows(df, df2)
df
df %>% View()
write.csv(df, './Data/mq_ellie_weaners_argos.csv')
weaners
write_csv(df, './Data/mq-ellie-weaners-argos.csv')
ellies
weaners
weaners$lc <- weaners$id %>% as.factor()
weaners
# Fit SSM -----------------------------------------------------------------
weaners <- weaners %>% filter(!id == 'mq1-22488-95') # this seal had < 3 locations
fit <- fit_ssm(weaners, model= 'crw', vmax = 2, time.step = NA, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(ellies, vmax = 4, model = "crw", time.step = 24, verbose = 0)
fit
mdb
mdb$deployments
mdb$dive
mdb$haulout
mdb$sms_intermediate
mdb$haulout_orig
mdb$summary
mdb$tag_info
mdb$cruise
# Plot raw locations ------------------------------------------------------
weaners %>%
ggplot(aes(lon, lat, colour = id)) +
geom_point() +
geom_path()
weaners_split <- split(weaners, weaners$id)
summary(weaners_split)
weaners %>%
slice(id)
?slice
df <- mdb$diag %>% as_tibble()
df2 <- mdb2$diag %>% as_tibble()
df <- bind_rows(df, df2)
df <- mdb$diag %>% as_tibble() %>% select(-PTT) %>% mutate(ACTUAL.PTT = ACTUAL.PTT %>% as.character)
df2 <- mdb2$diag %>% as_tibble() %>% select(-PTT) %>% mutate(ACTUAL.PTT = ACTUAL.PTT %>% as.character)
df <- bind_rows(df, df2)
write_csv(df, './Data/mq-ellie-weaners-argos.csv')
## Parse Date Time
df <- df %>%
mutate(D.DATE = D.DATE %>% as.character() %>% mdy_hms())
## Get rid of the "labelled" class attribute for numeric columns
df <- df %>% mutate_if(is.numeric, as.numeric)
## Select only relevant columns and rename them
weaners <- df %>%
select(ACTUAL.PTT, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
weaners$id <- weaners$id %>% as.character()
weaners$lc <- weaners$id %>% as.factor()
weaners_split <- split(weaners, weaners$id)
weaners_split %>% summary
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)))
# Plot raw locations ------------------------------------------------------
weaners %>%
group_by(id) %>%
nest()
weaners %>%
ggplot(aes(lon, lat, colour = id)) +
geom_point() +
geom_path()
install.packages("trip")
library(trip)
# Fit SSM -----------------------------------------------------------------
library(argosfilter)
weaners %>%
group_by(id) %>%
nest()
library(Hmisc)
library(tidyverse)
library(lubridate)
library(trip)
## Install foieGras
# remotes::install_github("ianjonsen/foieGras")
library(foieGras)
weaners %>%
group_by(id) %>%
nest()
# Fit SSM -----------------------------------------------------------------
library(argosfilter)
weaners %>%
group_by(id) %>%
nest() %>%
.$data
w <- weaners %>%
group_by(id) %>%
nest() %>%
.$data
w <- weaners %>%
group_by(id) %>%
nest() %>%
.$data %>%
map(function(x) {
x$filter <- with(x, vmask(lat, lon, date, 4))
x
})
w
w <- weaners %>%
group_by(id) %>%
nest()
w
w$data <- w
w <- weaners %>%
group_by(id) %>%
nest()
w$data <- w %>%
.$data %>%
map(function(x) {
x$filter <- with(x, vmask(lat, lon, date, 4))
x
})
w
w
w$data
w$data <- w %>%
.$data %>%
map(function(x) {
x$filter <- with(x, vmask(lat, lon, date, 4))
x %>% filter(filter == 'not')
})
w
w$data
w %>% unnest()
w %>% unnest(cols = c(data))
w <- w %>%
unnest(cols = c(data)) %>%
select(-filter)
w
weaners
fit <- fit_ssm(weaners, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)), fit.to.subset = FALSE)
fit <- fit_ssm(w, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)), fit.to.subset = FALSE)
w <- w %>% filter(!id == '17213')
fit <- fit_ssm(w, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)), fit.to.subset = FALSE)
w
w <- w %>% ungroup()
w
fit <- fit_ssm(w, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)), fit.to.subset = FALSE)
w
w <- weaners %>%
group_by(id) %>%
nest()
w$data
## Select only relevant columns and rename them
weaners <- df %>%
select(ACTUAL.PTT, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
weaners$id <- weaners$id %>% as.character()
weaners$lc <- weaners$id %>% as.character()
weaners
df
## Select only relevant columns and rename them
weaners <- df %>%
select(ACTUAL.PTT, D.DATE, LQ, LON, LAT)
colnames(weaners) <- c('id', 'date', 'lc', 'lon', 'lat')
weaners$id <- weaners$id %>% as.character()
weaners$lc <- weaners$lc %>% factor()
weaners
w <- weaners %>%
group_by(id) %>%
nest()
w$data <- w %>%
.$data %>%
map(function(x) {
x$filter <- with(x, vmask(lat, lon, date, 4))
x %>% filter(filter == 'not')
})
w <- w %>%
unnest(cols = c(data)) %>%
select(-filter) %>%
ungroup()
w <- w %>% filter(!id == '17213')
fit <- fit_ssm(w, model= 'crw', time.step = 24, verbose = 0, map = list(psi = factor(NA)), fit.to.subset = FALSE)
w
fit <- fit_ssm(w, model= 'crw', vmax = 4, time.step = 24, verbose = 0, map = list(psi = factor(NA)))
w %>%
ggplot(aes(lon, lat, colour = id)) +
geom_point() +
geom_path()
mdb$haulout
ellies
ellies %>% View()
fit$ssm
fit$ssm[[1]]
fit <- fit_ssm(weaner, model= 'crw', pf = TRUE, vmax = 4, time.step = 24, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(weaners, model= 'crw', pf = TRUE, vmax = 4, time.step = 24, verbose = 0, map = list(psi = factor(NA)))
w <- weaners %>%
group_by(id) %>%
nest()
w
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw', pf = TRUE, vmax = 4, time.step = 24, verbose = 0, map = list(psi = factor(NA)))
fit
fit %>% View()
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0, map = list(psi = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0, map = list(psi = factor(NA)), optMeth = 'nlminb')
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0, map = list(psi = factor(NA)), optim = 'nlminb')
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0, map = list(rho = factor(NA)), optim = 'nlminb')
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0, map = list(rho = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0, map = list(rho_o = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA), psi = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA), tau = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA), D = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA), tau_x = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA), logD = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list( logD = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA), psi = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA), rho_p = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA)), optMeth ="Nelder-Mead" )
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA)), optMeth ="BFGS")
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA)), optMeth ="CG")
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA)), optMeth = "SANN")
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 24, verbose = 0,
map = list(rho_o = factor(NA)), optMeth = "Brent")
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 48, verbose = 0,
map = list(rho_o = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 4, time.step = 64, verbose = 0,
map = list(rho_o = factor(NA)))
fit <- fit_ssm(weaners %>% filter(id == '2849'), model= 'crw',  vmax = 5, time.step = 48, verbose = 0,
map = list(rho_o = factor(NA)))
# smooth using a state space model
install.packages("bsam")
library(bsam)
install.packages("rjags")
library(bsam)
install.packages("rjags")
library(bsam)
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/3/rjags_3-2.tar.gz",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/3/rjags_3-2.tar.gz",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
"
)
library(rjags)
install.packages("rjags")
